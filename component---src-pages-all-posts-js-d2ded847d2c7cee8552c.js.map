{"version":3,"sources":["webpack://website/./src/components/organisms/post-list-item.js","webpack://website/./src/pages/all-posts.js"],"names":["Article","props","theme","spacing","colors","brightgray","text","fontSizes","fontWeights","regular","black","post","title","frontmatter","tags","sort","key","fields","slug","itemScope","itemType","to","itemProp","description","excerpt","date","Grid","widths","main","aside","full","Wrapper","PostList","data","location","siteTitle","site","siteMetadata","posts","allMdx","nodes","map","id"],"mappings":"iJAKMA,GAAO,yDACM,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KADnC,mBAIM,qBAAGD,MAAkBC,QAAQ,KAJnC,gBAMG,qBAAGD,MAAkBE,OAAOC,aAN/B,yJAiBA,qBAAGH,MAAkBE,OAAOE,OAjB5B,qBAsBE,qBAAGJ,MAAkBC,QAAQ,KAtB/B,KAuBL,qBAAGD,MAAkBC,QAAQ,KAvBxB,uBA2BQ,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KA3BrC,gBA4BK,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KA5BlC,eA6BI,SAAAF,GAAK,OAAIA,EAAMC,MAAMK,UAAU,KA7BnC,iBA8BM,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,YAAYC,UA9BvC,WA+BA,SAAAR,GAAK,OAAIA,EAAMC,MAAME,OAAOM,QA/B5B,eAmCC,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAnC9B,MA+Db,IAxBqB,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KAChBC,EAAQD,EAAKE,YAAYD,MACzBE,EAAOH,EAAKE,YAAYC,KAG9B,OAFIA,GAAMA,EAAKC,QAGb,eAAIC,IAAKL,EAAKM,OAAOC,OACnB,SAAClB,EAAD,CAASmB,WAAS,EAACC,SAAS,8BAC1B,SAAC,KAAD,CAAMC,GAAIV,EAAKM,OAAOC,KAAMI,SAAS,QACnC,wBACE,oBACE,iBAAMA,SAAS,YAAYV,KAE7B,cAAGU,SAAS,eACTX,EAAKE,YAAYU,aAAeZ,EAAKa,UAExC,sBAAQb,EAAKE,YAAYY,Y,iHCrDrC,IAAMC,GAAI,mDACO,SAAAzB,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KADpC,gDAIyB,qBAAGD,MAAkByB,OAAOC,OAJrD,YAIoE,qBACxE1B,MACUyB,OAAOE,QANb,8CAYa,qBAAG3B,MAAkByB,OAAOG,OAZzC,oCAa2B,qBAAG5B,MAAkByB,OAAOC,OAbvD,iBAiBJG,GAAO,iDACE,SAAA9B,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAD/B,uCAQQ,qBAAGD,MAAkBC,QAAQ,KARrC,MAYP6B,GAAQ,4EA4Bd,UAxBiB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBzB,QAAxB,QACZ0B,EAAQL,EAAKM,OAAOC,MAE1B,OACE,SAAC,IAAD,CAAQN,SAAUA,EAAUtB,MAAOuB,IACjC,SAAC,IAAD,CAAKvB,MAAM,aACX,SAACc,EAAD,MACE,SAACK,EAAD,MACE,+BACA,mBACE,SAAC,KAAD,CAAMV,GAAG,KAAT,kBAEF,SAACW,EAAD,KACGM,EAAMG,KAAI,SAAA9B,GAAI,OACb,SAAC,IAAD,CAAcA,KAAMA,EAAMK,IAAKL,EAAK+B","file":"component---src-pages-all-posts-js-d2ded847d2c7cee8552c.js","sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\n\nconst Article = styled.article`\n  margin-bottom: ${props => props.theme.spacing[7]};\n\n  /* border: 1px solid ${({ theme }) => theme.colors.accent}; */\n  border-radius: ${({ theme }) => theme.spacing[3]};\n\n  background: ${({ theme }) => theme.colors.brightgray};\n\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.4s;\n\n  &:hover {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  }\n\n  a {\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  header {\n    /* margin-bottom: ${props => props.theme.spacing[4]}; */\n    padding: ${({ theme }) => theme.spacing[6]}\n      ${({ theme }) => theme.spacing[7]};\n  }\n\n  h2 {\n    margin-bottom: ${props => props.theme.spacing[1]};\n    margin-top: ${props => props.theme.spacing[0]};\n    font-size: ${props => props.theme.fontSizes[3]};\n    font-weight: ${props => props.theme.fontWeights.regular};\n    color: ${props => props.theme.colors.black};\n  }\n\n  p {\n    margin: ${props => props.theme.spacing[0]};\n  }\n`\n\nconst PostListItem = ({ post }) => {\n  const title = post.frontmatter.title\n  const tags = post.frontmatter.tags\n  if (tags) tags.sort()\n\n  return (\n    <li key={post.fields.slug}>\n      <Article itemScope itemType=\"http://schema.org/Article\">\n        <Link to={post.fields.slug} itemProp=\"url\">\n          <header>\n            <h2>\n              <span itemProp=\"headline\">{title}</span>\n            </h2>\n            <p itemProp=\"description\">\n              {post.frontmatter.description || post.excerpt}\n            </p>\n            <small>{post.frontmatter.date}</small>\n          </header>\n        </Link>\n      </Article>\n    </li>\n  )\n}\n\nexport default PostListItem\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostListItem from \"../components/organisms/post-list-item\"\nimport styled from \"@emotion/styled\"\n\nconst Grid = styled.div`\n  padding-top: ${props => props.theme.spacing[5]};\n  \n  display: grid;\n  grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) ${({\n      theme,\n    }) => theme.widths.aside} 1fr;\n\n  > * {\n    grid-column: 2;\n  }\n\n  @media (max-width: ${({ theme }) => theme.widths.full}) {\n    grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) 1fr;\n  }\n`\n\nconst Wrapper = styled.div`\n  padding: 0 ${props => props.theme.spacing[5]};\n\n  h1 {\n    margin-top: 0;\n  }\n\n  > p {\n    margin-bottom: ${({ theme }) => theme.spacing[7]};\n  }\n`\n\nconst PostList = styled.ol`\n  list-style: none;\n`\n\nconst AllPosts = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"모든 글 보기\" />\n      <Grid>\n        <Wrapper>\n          <h1>모든 글 보기</h1>\n          <p>\n            <Link to=\"/\">메인 페이지로 돌아가기</Link>\n          </p>\n          <PostList>\n            {posts.map(post => (\n              <PostListItem post={post} key={post.id} />\n            ))}\n          </PostList>\n        </Wrapper>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default AllPosts\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}