{"version":3,"sources":["webpack://website/./src/components/atoms/round-box.js","webpack://website/./src/components/organisms/latest-section.js","webpack://website/./src/components/organisms/post-list-item.js","webpack://website/./src/components/organisms/round-box-item.js","webpack://website/./src/pages/404.js"],"names":["RoundBox","props","theme","spacing","bg","bgHover","colors","text","short","fontSizes","fontWeights","regular","black","Section","widths","main","OrderedList","posts","map","post","key","id","slug","title","frontmatter","tags","sort","itemScope","schema","to","fields","itemProp","description","excerpt","date","children","Grid","aside","full","Wrapper","data","location","siteTitle","site","siteMetadata","allMdx","nodes"],"mappings":"2GAUMA,GAAQ,E,QAAA,iDACK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KADlC,mBAEK,qBAAGD,MAAkBC,QAAQ,KAFlC,gBAIE,qBAAGC,KAJL,sJAUI,qBAAGC,UAVP,iDAgBD,qBAAGH,MAAkBI,OAAOC,OAhB3B,qBAoBC,gBAAGL,EAAH,EAAGA,MAAH,SAAUM,MAAoBN,EAAMC,QAAQ,GAAKD,EAAMC,QAAQ,KApBhE,KAoBsE,qBAAGD,MAAkBC,QAAQ,KApBnG,uBAwBO,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAxBpC,gBAyBI,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAzBjC,eA0BG,SAAAF,GAAK,OAAIA,EAAMC,MAAMO,UAAU,KA1BlC,iBA2BK,SAAAR,GAAK,OAAIA,EAAMC,MAAMQ,YAAYC,UA3BtC,WA4BD,SAAAV,GAAK,OAAIA,EAAMC,MAAMI,OAAOM,QA5B3B,eAgCA,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAhC7B,MAoCd,O,sFCzCA,IAAMU,GAAO,sFAIU,qBAAGX,MAAkBY,OAAOC,OAJtC,kBASPC,GAAW,2EAoBjB,IAhBsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvB,OACE,SAACJ,EAAD,MACE,4BACA,SAACG,EAAD,KACGC,EAAMC,KAAI,SAAAC,GAAI,OACb,SAAC,IAAD,CAAcA,KAAMA,EAAMC,IAAKD,EAAKE,SAEtC,SAAC,IAAD,CAAcC,KAAM,cAAed,OAAK,GAAxC,iB,oFCOR,IA1BqB,SAAC,GAAc,IAAZW,EAAW,EAAXA,KAChBI,EAAQJ,EAAKK,YAAYD,MACzBE,EAAON,EAAKK,YAAYC,KAG9B,OAFIA,GAAMA,EAAKC,QAGb,oBACE,oBAASC,WAAS,EAACC,OAAO,+BACxB,SAAC,IAAD,CAAUxB,GAAIF,wBACZ,SAAC,KAAD,CAAM2B,GAAIV,EAAKW,OAAOR,KAAMS,SAAS,QACnC,wBACE,oBACE,iBAAMA,SAAS,YAAYR,KAE7B,cAAGQ,SAAS,eACTZ,EAAKK,YAAYQ,aAAeb,EAAKc,SAEvCd,EAAKK,YAAYU,OAAQ,sBAAQf,EAAKK,YAAYU,a,sFCHjE,IAdqB,SAAAjC,GACnB,IAAQkC,EAA0BlC,EAA1BkC,SAAUb,EAAgBrB,EAAhBqB,KAAMd,EAAUP,EAAVO,MAExB,OACE,SAAC,IAAD,CAAUJ,GAAIF,sBAAyBM,MAAOA,IAC5C,SAAC,KAAD,CAAMqB,GAAIP,IACR,wBACE,kBAAIa,Q,yGCPRC,GAAI,kDACO,SAAAnC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KADpC,gDAIyB,qBAAGD,MAAkBY,OAAOC,OAJrD,YAIoE,qBACxEb,MACUY,OAAOuB,QANb,8CAYa,qBAAGnC,MAAkBY,OAAOwB,OAZzC,oCAa2B,qBAAGpC,MAAkBY,OAAOC,OAbvD,iBAiBJwB,GAAO,gDACE,SAAAtC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,KAD/B,uCAQQ,qBAAGD,MAAkBC,QAAQ,KARrC,MA6Bb,UAjBqB,SAAC,GAAwB,IAAtBqC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAYF,EAAKG,KAAKC,aAAarB,MACnCN,EAAQuB,EAAKK,OAAOC,MAE1B,OACE,SAAC,IAAD,CAAQL,SAAUA,EAAUlB,MAAOmB,IACjC,SAAC,IAAD,CAAKnB,MAAM,oBACX,SAACa,EAAD,MACE,SAACG,EAAD,MACE,4CACA,SAAC,IAAD,CAAetB,MAAOA","file":"component---src-pages-404-js-63fdc3ce54095757108b.js","sourcesContent":["import styled from \"@emotion/styled\"\n\n/**\n * generic box container.\n * used in\n * - post list item\n * - collection list item\n * - etc.\n */\n\nconst RoundBox = styled.div`\n  margin-bottom: ${props => props.theme.spacing[5]};\n  border-radius: ${({ theme }) => theme.spacing[3]};\n\n  background: ${({ bg }) => bg};\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.4s, background 0.3s;\n\n  &:hover {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    background: ${({ bgHover }) => bgHover};\n  }\n\n  a {\n    display: block;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  header {\n    padding: ${({ theme, short }) => short ? theme.spacing[3] : theme.spacing[6]} ${({ theme }) => theme.spacing[7]};\n  }\n\n  h2 {\n    margin-bottom: ${props => props.theme.spacing[1]};\n    margin-top: ${props => props.theme.spacing[0]};\n    font-size: ${props => props.theme.fontSizes[3]};\n    font-weight: ${props => props.theme.fontWeights.regular};\n    color: ${props => props.theme.colors.black};\n  }\n\n  p {\n    margin: ${props => props.theme.spacing[0]};\n  }\n`\n\nexport default RoundBox\n","import React from \"react\"\nimport PostListItem from \"./post-list-item\"\nimport RoundBoxItem from \"./round-box-item\"\nimport styled from \"@emotion/styled\"\n\nconst Section = styled.section`\n  grid-column: 1;\n  grid-row: 1;\n\n  @media (max-width: ${({ theme }) => theme.widths.main}) {\n    grid-row: 1;\n  }\n`\n\nconst OrderedList = styled.ol`\n  list-style: none;\n`\n\nconst LatestSection = ({ posts }) => {\n  return (\n    <Section>\n      <h1>최신 글</h1>\n      <OrderedList>\n        {posts.map(post => (\n          <PostListItem post={post} key={post.id} />\n        ))}\n        <RoundBoxItem slug={\"/all-posts/\"} short>\n          모든 글 보기 →\n        </RoundBoxItem>\n      </OrderedList>\n    </Section>\n  )\n}\n\nexport default LatestSection\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n// import styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\nimport RoundBox from \"../atoms/round-box\"\nimport theme from \"../../styles/theme\"\n\nconst PostListItem = ({ post }) => {\n  const title = post.frontmatter.title\n  const tags = post.frontmatter.tags\n  if (tags) tags.sort()\n\n  return (\n    <li>\n      <article itemScope schema=\"https://schema.org/Article\">\n        <RoundBox bg={theme.colors.brightgray}>\n          <Link to={post.fields.slug} itemProp=\"url\">\n            <header>\n              <h2>\n                <span itemProp=\"headline\">{title}</span>\n              </h2>\n              <p itemProp=\"description\">\n                {post.frontmatter.description || post.excerpt}\n              </p>\n              {post.frontmatter.date && <small>{post.frontmatter.date}</small>}\n            </header>\n          </Link>\n        </RoundBox>\n      </article>\n    </li>\n  )\n}\n\nexport default PostListItem\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n// import styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\nimport RoundBox from \"../atoms/round-box\"\nimport theme from \"../../styles/theme\"\n\nconst RoundBoxItem = props => {\n  const { children, slug, short } = props\n\n  return (\n    <RoundBox bg={theme.colors.brightgray} short={short}>\n      <Link to={slug}>\n        <header>\n          <p>{children}</p>\n        </header>\n      </Link>\n    </RoundBox>\n  )\n}\n\nexport default RoundBoxItem\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport LatestSection from \"../components/organisms/latest-section\"\n\nconst Grid = styled.div`\n  padding-top: ${props => props.theme.spacing[5]};\n\n  display: grid;\n  grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) ${({\n      theme,\n    }) => theme.widths.aside} 1fr;\n\n  > * {\n    grid-column: 2;\n  }\n\n  @media (max-width: ${({ theme }) => theme.widths.full}) {\n    grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) 1fr;\n  }\n`\n\nconst Wrapper = styled.div`\n  padding: 0 ${props => props.theme.spacing[5]};\n\n  h1 {\n    margin-top: 0;\n  }\n\n  > p {\n    margin-bottom: ${({ theme }) => theme.spacing[7]};\n  }\n`\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <Grid>\n        <Wrapper>\n          <h1>404: 페이지를 찾을 수 없습니다.</h1>\n          <LatestSection posts={posts} />\n        </Wrapper>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 6) {\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n\n// export const pageQuery = graphql`\n//   query {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//     allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 6) {\n//       nodes {\n//         id\n//         excerpt\n//         fields {\n//           slug\n//         }\n//         frontmatter {\n//           date(formatString: \"MMMM D, YYYY\")\n//           title\n//           description\n//         }\n//       }\n//     }\n//     allCollectionsYaml {\n//       nodes {\n//         title\n//         subtitle\n//         slug\n//         urls\n//         featured\n//       }\n//     }\n//   }\n// `\n"],"sourceRoot":""}