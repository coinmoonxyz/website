{"version":3,"sources":["webpack://website/./src/components/atoms/round-box.js","webpack://website/./src/components/organisms/collection-list-item.js","webpack://website/./src/components/organisms/collection-section.js","webpack://website/./src/components/organisms/latest-section.js","webpack://website/./src/components/organisms/post-list-item.js","webpack://website/./src/components/organisms/round-box-item.js","webpack://website/./src/pages/404.js"],"names":["RoundBox","props","theme","spacing","bg","bgHover","colors","text","short","fontSizes","fontWeights","regular","black","Box","collection","title","subtitle","slug","to","Section","widths","main","OrderedList","collections","map","posts","post","key","id","frontmatter","tags","sort","itemScope","schema","fields","itemProp","description","excerpt","date","children","Grid","full","Wrapper","data","location","siteTitle","site","siteMetadata","allMdx","nodes","allCollectionsYaml"],"mappings":"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","file":"component---src-pages-404-js-00ffbe8fb6d0866fd6d7.js","sourcesContent":["import styled from \"@emotion/styled\"\n\n/**\n * generic box container.\n * used in\n * - post list item\n * - collection list item\n * - etc.\n */\n\nconst RoundBox = styled.div`\n  margin-bottom: ${props => props.theme.spacing[5]};\n  border-radius: ${({ theme }) => theme.spacing[3]};\n\n  background: ${({ bg }) => bg};\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.4s, background 0.3s;\n\n  &:hover {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    background: ${({ bgHover }) => bgHover};\n  }\n\n  a {\n    display: block;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  header {\n    padding: ${({ theme, short }) => short ? theme.spacing[3] : theme.spacing[6]} ${({ theme }) => theme.spacing[7]};\n  }\n\n  h2 {\n    margin-bottom: ${props => props.theme.spacing[1]};\n    margin-top: ${props => props.theme.spacing[0]};\n    font-size: ${props => props.theme.fontSizes[3]};\n    font-weight: ${props => props.theme.fontWeights.regular};\n    color: ${props => props.theme.colors.black};\n  }\n\n  p {\n    margin: ${props => props.theme.spacing[0]};\n  }\n`\n\nexport default RoundBox\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\n// import { grid } from \"styled-system\"\nimport RoundBox from \"../atoms/round-box\"\nimport theme from \"../../styles/theme\"\n\nconst Box = styled.article`\n  padding: ${({ theme }) => theme.spacing[7]} ${({ theme }) => theme.spacing[7]};\n\n  color: ${({ theme }) => theme.colors.text};\n\n  h2 {\n    margin-bottom: ${({ theme }) => theme.spacing[2]};\n  }\n\n  p {\n    margin: 0;\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n  }\n`\n\nconst CollectionListItem = ({ collection }) => {\n  const { title, subtitle, slug } = collection\n  return (\n    <li>\n      <RoundBox bg={theme.colors.white} bgHover={theme.colors.logoLight}>\n        <Link to={`collection/${slug}`}>\n          <Box>\n            <h2>{title}</h2>\n            <p>{subtitle}</p>\n          </Box>\n        </Link>\n      </RoundBox>\n    </li>\n  )\n}\n\nexport default CollectionListItem\n","import React from \"react\"\nimport CollectionListItem from \"./collection-list-item\"\nimport styled from \"@emotion/styled\"\n\nconst Section = styled.section`\n  grid-column: 2;\n  grid-row: 1;\n\n  @media (max-width: ${({ theme }) => theme.widths.main}) {\n    grid-column: 1;\n    grid-row: 2;\n  }\n`\n\nconst OrderedList = styled.ol`\n  list-style: none;\n`\n\nconst CollectionSection = ({ collections }) => {\n  return (\n    <Section>\n      <h1>글 모음</h1>\n      <OrderedList>\n        {collections.map(collection => (\n          <CollectionListItem collection={collection} />\n        ))}\n        {/* <RoundBoxItem title={\"모든 글 모음 보기 →\"} slug={\"/all-posts/\"} /> */}\n      </OrderedList>\n    </Section>\n  )\n}\n\nexport default CollectionSection\n","import React from \"react\"\nimport PostListItem from \"./post-list-item\"\nimport RoundBoxItem from \"./round-box-item\"\nimport styled from \"@emotion/styled\"\n\nconst Section = styled.section`\n  grid-column: 1;\n  grid-row: 1;\n\n  @media (max-width: ${({ theme }) => theme.widths.main}) {\n    grid-row: 1;\n  }\n`\n\nconst OrderedList = styled.ol`\n  list-style: none;\n`\n\nconst LatestSection = ({ posts }) => {\n  return (\n    <Section>\n      <h1>최신 글</h1>\n      <OrderedList>\n        {posts.map(post => (\n          <PostListItem post={post} key={post.id} />\n        ))}\n        <RoundBoxItem slug={\"/all-posts/\"} short>\n          모든 글 보기 →\n        </RoundBoxItem>\n      </OrderedList>\n    </Section>\n  )\n}\n\nexport default LatestSection\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n// import styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\nimport RoundBox from \"../atoms/round-box\"\nimport theme from \"../../styles/theme\"\n\nconst PostListItem = ({ post }) => {\n  const title = post.frontmatter.title\n  const tags = post.frontmatter.tags\n  if (tags) tags.sort()\n\n  return (\n    <li>\n      <article itemScope schema=\"https://schema.org/Article\">\n        <RoundBox bg={theme.colors.brightgray}>\n          <Link to={post.fields.slug} itemProp=\"url\">\n            <header>\n              <h2>\n                <span itemProp=\"headline\">{title}</span>\n              </h2>\n              <p itemProp=\"description\">\n                {post.frontmatter.description || post.excerpt}\n              </p>\n              {post.frontmatter.date && <small>{post.frontmatter.date}</small>}\n            </header>\n          </Link>\n        </RoundBox>\n      </article>\n    </li>\n  )\n}\n\nexport default PostListItem\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n// import styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\nimport RoundBox from \"../atoms/round-box\"\nimport theme from \"../../styles/theme\"\n\nconst RoundBoxItem = props => {\n  const { children, slug, short } = props\n\n  return (\n    <RoundBox bg={theme.colors.brightgray} short={short}>\n      <Link to={slug}>\n        <header>\n          <p>{children}</p>\n        </header>\n      </Link>\n    </RoundBox>\n  )\n}\n\nexport default RoundBoxItem\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport LatestSection from \"../components/organisms/latest-section\"\nimport CollectionSection from \"../components/organisms/collection-section\"\n\nconst Grid = styled.div`\n  padding-top: ${props => props.theme.spacing[5]};\n\n  display: grid;\n  grid-template-columns: 1fr min(${({ theme }) => theme.widths.full}, 100%) 1fr;\n\n  > * {\n    grid-column: 2;\n  }\n\n  @media (max-width: ${({ theme }) => theme.widths.main}) {\n    grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) 1fr;\n  }\n`\n\nconst Wrapper = styled.div`\n  padding: 0 ${props => props.theme.spacing[5]};\n\n  display: grid;\n  grid-template-columns: 4fr 2fr;\n  grid-gap: ${({ theme }) => theme.spacing[8]};\n\n  h1 {\n    margin-top: 0;\n  }\n\n  > p {\n    margin-bottom: ${({ theme }) => theme.spacing[7]};\n  }\n\n  @media (max-width: ${({ theme }) => theme.widths.main}) {\n    grid-template-columns: 100%;\n  }\n`\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.nodes\n  const collections = data.allCollectionsYaml.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <Grid>\n        <Wrapper>\n          {/* <h1>404: 페이지를 찾을 수 없습니다.</h1> */}\n          <LatestSection posts={posts} />\n          <CollectionSection collections={collections} />\n        </Wrapper>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 6) {\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n        }\n      }\n    }\n    allCollectionsYaml {\n      nodes {\n        title\n        subtitle\n        slug\n        urls\n        featured\n      }\n    }\n  }\n`"],"sourceRoot":""}