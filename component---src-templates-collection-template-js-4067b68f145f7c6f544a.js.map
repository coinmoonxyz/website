{"version":3,"sources":["webpack://website/./src/components/atoms/divider.js","webpack://website/./src/components/organisms/post-list-item.js","webpack://website/./src/templates/collection-template.js"],"names":["Divider","theme","spacing","colors","accent","Article","props","text","fontSizes","fontWeights","regular","black","post","title","frontmatter","tags","sort","key","fields","slug","itemScope","itemType","to","itemProp","description","excerpt","date","Grid","widths","main","aside","full","Wrapper","PostList","data","location","siteTitle","site","siteMetadata","allCollectionsYaml","edges","node","name","urls","map","url"],"mappings":"2GAEMA,GAAO,E,QAAA,wCACD,qBAAGC,MAAkBC,QAAQ,KAD5B,kBAEG,qBAAGD,MAAkBE,OAAOC,SAF/B,yBAOb,O,4ECJMC,GAAO,yDACM,SAAAC,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KADnC,mBAIM,qBAAGD,MAAkBC,QAAQ,KAJnC,yJAeA,qBAAGD,MAAkBE,OAAOI,OAf5B,qBAoBE,qBAAGN,MAAkBC,QAAQ,KApB/B,KAqBL,qBAAGD,MAAkBC,QAAQ,KArBxB,uBAyBQ,SAAAI,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KAzBrC,gBA0BK,SAAAI,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KA1BlC,eA2BI,SAAAI,GAAK,OAAIA,EAAML,MAAMO,UAAU,KA3BnC,iBA4BM,SAAAF,GAAK,OAAIA,EAAML,MAAMQ,YAAYC,UA5BvC,WA6BA,SAAAJ,GAAK,OAAIA,EAAML,MAAME,OAAOQ,QA7B5B,eAiCC,SAAAL,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KAjC9B,MA6Db,IAxBqB,SAAC,GAAc,IAAZU,EAAW,EAAXA,KAChBC,EAAQD,EAAKE,YAAYD,MACzBE,EAAOH,EAAKE,YAAYC,KAG9B,OAFIA,GAAMA,EAAKC,QAGb,eAAIC,IAAKL,EAAKM,OAAOC,OACnB,SAACd,EAAD,CAASe,WAAS,EAACC,SAAS,8BAC1B,SAAC,KAAD,CAAMC,GAAIV,EAAKM,OAAOC,KAAMI,SAAS,QACnC,wBACE,oBACE,iBAAMA,SAAS,YAAYV,KAE7B,cAAGU,SAAS,eACTX,EAAKE,YAAYU,aAAeZ,EAAKa,UAExC,sBAAQb,EAAKE,YAAYY,Y,2HClDrC,IAAMC,GAAI,mDACO,SAAArB,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KADpC,gDAIyB,qBAAGD,MAAkB2B,OAAOC,OAJrD,YAIoE,qBACxE5B,MACU2B,OAAOE,QANb,8CAYa,qBAAG7B,MAAkB2B,OAAOG,OAZzC,oCAa2B,qBAAG9B,MAAkB2B,OAAOC,OAbvD,iBAgBJG,GAAO,iDACE,SAAA1B,GAAK,OAAIA,EAAML,MAAMC,QAAQ,KAD/B,sBAQP+B,GAAQ,4EA+Cd,UA3C2B,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC5BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBzB,QAAxB,QAClB,EAAoCqB,EAAKK,mBAAmBC,MAAM,GAAGC,KAA7DC,EAAR,EAAQA,KAAMlB,EAAd,EAAcA,YAAamB,EAA3B,EAA2BA,KAE3B,OACE,SAAC,IAAD,CAAQR,SAAUA,EAAUtB,MAAOuB,IACjC,SAAC,IAAD,CAAKvB,MAAO,aAAcW,YAAW,iBAErC,SAACG,EAAD,MACE,SAACK,EAAD,MACE,mBAAKU,IACL,kBAAIlB,IACJ,mBACE,SAAC,KAAD,CAAMF,GAAG,KAAT,kBAEF,SAAC,IAAD,OACA,SAACW,EAAD,KACGU,EAAKC,KAAI,SAAAC,GACR,OACE,eAAI5B,IAAK4B,IACP,oBAASzB,WAAS,EAACC,SAAS","file":"component---src-templates-collection-template-js-4067b68f145f7c6f544a.js","sourcesContent":["import styled from \"@emotion/styled\"\n\nconst Divider = styled.hr`\n  margin: ${({ theme }) => theme.spacing[7]} 0;\n  background: ${({ theme }) => theme.colors.accent};\n  height: 1px;\n  border: 0;\n`\n\nexport default Divider\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n// import { css } from \"@emotion/react\"\n\nconst Article = styled.article`\n  margin-bottom: ${props => props.theme.spacing[7]};\n\n  /* border: 1px solid ${({ theme }) => theme.colors.accent}; */\n  border-radius: ${({ theme }) => theme.spacing[3]};\n\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.4s;\n\n  &:hover {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  }\n\n  a {\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  header {\n    /* margin-bottom: ${props => props.theme.spacing[4]}; */\n    padding: ${({ theme }) => theme.spacing[6]}\n      ${({ theme }) => theme.spacing[7]};\n  }\n\n  h2 {\n    margin-bottom: ${props => props.theme.spacing[1]};\n    margin-top: ${props => props.theme.spacing[0]};\n    font-size: ${props => props.theme.fontSizes[3]};\n    font-weight: ${props => props.theme.fontWeights.regular};\n    color: ${props => props.theme.colors.black};\n  }\n\n  p {\n    margin: ${props => props.theme.spacing[0]};\n  }\n`\n\nconst PostListItem = ({ post }) => {\n  const title = post.frontmatter.title\n  const tags = post.frontmatter.tags\n  if (tags) tags.sort()\n\n  return (\n    <li key={post.fields.slug}>\n      <Article itemScope itemType=\"http://schema.org/Article\">\n        <Link to={post.fields.slug} itemProp=\"url\">\n          <header>\n            <h2>\n              <span itemProp=\"headline\">{title}</span>\n            </h2>\n            <p itemProp=\"description\">\n              {post.frontmatter.description || post.excerpt}\n            </p>\n            <small>{post.frontmatter.date}</small>\n          </header>\n        </Link>\n      </Article>\n    </li>\n  )\n}\n\nexport default PostListItem\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostListItem from \"../components/organisms/post-list-item\"\nimport Divider from \"../components/atoms/divider\"\nimport styled from \"@emotion/styled\"\n\nconst Grid = styled.div`\n  padding-top: ${props => props.theme.spacing[5]};\n\n  display: grid;\n  grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) ${({\n      theme,\n    }) => theme.widths.aside} 1fr;\n\n  > * {\n    grid-column: 2;\n  }\n\n  @media (max-width: ${({ theme }) => theme.widths.full}) {\n    grid-template-columns: 1fr min(${({ theme }) => theme.widths.main}, 100%) 1fr;\n  }\n`\nconst Wrapper = styled.div`\n  padding: 0 ${props => props.theme.spacing[5]};\n\n  h1 {\n    margin-top: 0;\n  }\n`\n\nconst PostList = styled.ol`\n  list-style: none;\n`\n\nconst CollectionTemplate = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { name, description, urls } = data.allCollectionsYaml.edges[0].node\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={\"PAGE TITLE\"} description={`DESCRIPTION`} />\n\n      <Grid>\n        <Wrapper>\n          <h1>{name}</h1>\n          <p>{description}</p>\n          <p>\n            <Link to=\"/\">메인 페이지로 돌아가기</Link>\n          </p>\n          <Divider />\n          <PostList>\n            {urls.map(url => {\n              return (\n                <li key={url}>\n                  <article itemScope itemType=\"http://schema.org/Article\">\n                    {/* <Link to={post.fields.slug} itemProp=\"url\">\n                      <header>\n                        <h2>\n                          <span itemProp=\"headline\">{title}</span>\n                        </h2>\n                        <p itemProp=\"description\">\n                          {post.frontmatter.description || post.excerpt}\n                        </p>\n                        <small>{post.frontmatter.date}</small>\n                      </header>\n                    </Link> */}\n                  </article>\n                </li>\n              )\n            })}\n          </PostList>\n        </Wrapper>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default CollectionTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allCollectionsYaml(filter: { slug: { eq: $slug } }) {\n      edges {\n        node {\n          name\n          description\n          urls\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}